"use strict";var adbCommander=require("adb-commander"),chromeLauncher=require("chrome-simple-launcher"),path=require("path"),portfinder=require("portfinder"),request=require("request"),LOCAL_HOST="127.0.0.1",MIWEBVIEW_DEVTOOLS_PORT_REGEX=/((?:hybrid_)|(?:miui_))?webview_devtools_remote_(\d+)/,NETSTAT_STATUS_LISTENING="LISTENING",BROWSER_STRING="Browser",TITLE_STRING="title",WEBSOCKET_DEBUGGER_URL_STRING="webSocketDebuggerUrl",CHROME_INSPECTOR_URL="https://devtools.inf.miui.com/inspector/",CHROME_BUNDLED_INSPECTOR_URL="chrome-devtools://devtools/bundled/inspector.html",CHROME_INSPECTOR_QUERY="remoteFrontend=true&dockSide=undocked",useDesktopbundled=!1,printOnly=!1;function getInspectablePageListURL(e){return"http://".concat(LOCAL_HOST,":").concat(e,"/json/list")}function getInspectableVersionURL(e){return"http://".concat(LOCAL_HOST,":").concat(e,"/json/version")}function getInspectorUrl(e){if(e){if(useDesktopbundled)return CHROME_BUNDLED_INSPECTOR_URL;return e=61<e.split(".")[0]?"71.0.3578.132":"61.0.3163.128","".concat(CHROME_INSPECTOR_URL).concat(e,"/inspector.html")}}function forwardPort(o,e,t){portfinder.basePort=e,portfinder.getPortPromise().then(function(r){var e="tcp:".concat(r," localabstract:").concat(t);return console.log(e),adbCommander.exeCommand("adb -s ".concat(o," forward tcp:").concat(r," localabstract:").concat(t)).then(function(e){e.result;if(e.err)return console.log("Port forward already setup."),void getAvailablePages(r);console.log("Setup port forawrd."),getAvailablePages(r)})}).catch(function(){console.error("Can not find valid port forward.")})}function getAvailablePages(e){var t=getInspectablePageListURL(e),r=getInspectableVersionURL(e);request(r,function(e,r){if(e)return console.log("Error request version information"+e);var o=JSON.parse(r.body)[BROWSER_STRING];if(!o)return console.log("Error, can't get chrome version.");var n=getInspectorUrl(o=o.split("/")[1]);request(t,function(e,r){if(e)return console.log("Error request inspectable pages: "+e);JSON.parse(r.body).map(function(e){var r=e[TITLE_STRING],o=e[WEBSOCKET_DEBUGGER_URL_STRING];if(o){o=o.replace("ws://","ws=");var t="".concat(n,"?").concat(CHROME_INSPECTOR_QUERY,"&").concat(o);console.log("Page: "+r),console.log("    Debugger URL: "+t),printOnly||chromeLauncher.launch(t).then(function(){console.log("Debugger URL opened in Chrome.")})}})})})}function getDebuggerUrl(){adbCommander.deviceList().then(function(e,r){if(!r){var o=e.deviceList;if(0===o.length)throw new Error("No Device attached to PC.");return Promise.all(o.map(function(c){return new Promise(function(r,o){adbCommander.exeCommand("adb shell netstat -anl").then(function(e){var r=e.result;e.err;if(!r)throw new Error("No network connections.");r.trim().split("\n").map(function(e){if(-1!==e.search(NETSTAT_STATUS_LISTENING)){var t=e.match(MIWEBVIEW_DEVTOOLS_PORT_REGEX);if(t){var n=t[2];adbCommander.exeCommand("adb -s ".concat(c," shell ps ").concat(n)).then(function(e){var r=e.result,o=(e.err,r.trim().split("\n")[1]);o&&o.match(/com.miui.hybrid:Launcher(\d+)/)&&forwardPort(c,n,t[0])})}}})}).then(function(e){return r(e)}).catch(function(e){return o(e)})})}))}console.error("fail to execute adb devices")}).then(function(){console.log("Debugger setup.")}).catch(function(e){console.error("Error in generating debugger URL:",e.stack)})}module.exports=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};e.useDesktopbundled&&(useDesktopbundled=!0),e.printOnly&&(printOnly=!0),adbCommander.exeCommand("adb forward --remove-all").then(function(e,r){r&&console.error("Error clear port forward"),getDebuggerUrl()})};